<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="26" passed="23" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-05-21T15:53:49 IST" name="Suite" finished-at="2025-05-21T15:54:01 IST" duration-ms="12046">
    <groups>
      <group name="groupData">
        <method signature="OneMoreClass.groupData4()[pri:0, instance:Testng.OneMoreClass@707194ba]" name="groupData4" class="Testng.OneMoreClass"/>
        <method signature="ThreeMethodOneClass.groupData1()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" name="groupData1" class="Testng.ThreeMethodOneClass"/>
        <method signature="ThreeMethodOneClass.groupData2()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" name="groupData2" class="Testng.ThreeMethodOneClass"/>
        <method signature="ThreeMethodOneClass.groupData3()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" name="groupData3" class="Testng.ThreeMethodOneClass"/>
      </group> <!-- groupData -->
    </groups>
    <test started-at="2025-05-21T15:53:49 IST" name="Test" finished-at="2025-05-21T15:54:01 IST" duration-ms="12046">
      <class name="Testng.WithoutmainMehod">
        <test-method signature="demo()[pri:0, instance:Testng.WithoutmainMehod@f79e]" started-at="2025-05-21T15:54:01 IST" name="demo" finished-at="2025-05-21T15:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
      </class> <!-- Testng.WithoutmainMehod -->
      <class name="Testng.ParametrisationinTestng">
        <test-method signature="classLevelParameters(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Testng.ParametrisationinTestng@6a2f6f80]" started-at="2025-05-21T15:54:01 IST" name="classLevelParameters" data-provider="getData" finished-at="2025-05-21T15:54:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstname]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[lastname]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[address]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classLevelParameters -->
        <test-method signature="classLevelParameters(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Testng.ParametrisationinTestng@6a2f6f80]" started-at="2025-05-21T15:54:01 IST" name="classLevelParameters" data-provider="getData" finished-at="2025-05-21T15:54:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[deepali]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[joshi]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[delhi]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classLevelParameters -->
        <test-method signature="classLevelParameters(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Testng.ParametrisationinTestng@6a2f6f80]" started-at="2025-05-21T15:54:01 IST" name="classLevelParameters" data-provider="getData" finished-at="2025-05-21T15:54:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mohina]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[kumar]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[haldwani]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classLevelParameters -->
        <test-method signature="suiteLevelParameters(java.lang.String)[pri:0, instance:Testng.ParametrisationinTestng@6a2f6f80]" started-at="2025-05-21T15:54:01 IST" name="suiteLevelParameters" finished-at="2025-05-21T15:54:01 IST" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'URL' is required by @Test on method suiteLevelParameters but has not been marked @Optional or defined
in C:\Users\Pooja\eclipse-workspace\WebsiteAutomation\testng2.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'URL' is required by @Test on method suiteLevelParameters but has not been marked @Optional or defined
in C:\Users\Pooja\eclipse-workspace\WebsiteAutomation\testng2.xml
at org.testng.internal.Parameters.createParams(Parameters.java:267)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:684)
at org.testng.internal.Parameters.handleParameters(Parameters.java:879)
at org.testng.internal.Parameters.handleParameters(Parameters.java:728)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:72)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:51)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:911)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suiteLevelParameters -->
        <test-method signature="testLevelParameters(java.lang.String,java.lang.String)[pri:0, instance:Testng.ParametrisationinTestng@6a2f6f80]" started-at="2025-05-21T15:54:01 IST" name="testLevelParameters" finished-at="2025-05-21T15:54:01 IST" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'username' is required by @Test on method testLevelParameters but has not been marked @Optional or defined
in C:\Users\Pooja\eclipse-workspace\WebsiteAutomation\testng2.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'username' is required by @Test on method testLevelParameters but has not been marked @Optional or defined
in C:\Users\Pooja\eclipse-workspace\WebsiteAutomation\testng2.xml
at org.testng.internal.Parameters.createParams(Parameters.java:267)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:684)
at org.testng.internal.Parameters.handleParameters(Parameters.java:879)
at org.testng.internal.Parameters.handleParameters(Parameters.java:728)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:72)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:51)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:911)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLevelParameters -->
      </class> <!-- Testng.ParametrisationinTestng -->
      <class name="Testng.Openurl">
        <test-method signature="openUrl()[pri:0, instance:Testng.Openurl@1190200a]" started-at="2025-05-21T15:53:58 IST" name="openUrl" finished-at="2025-05-21T15:54:01 IST" duration-ms="2987" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openUrl -->
      </class> <!-- Testng.Openurl -->
      <class name="Testng.HelperAttribute">
        <test-method signature="cMethod()[pri:0, instance:Testng.HelperAttribute@33c911a1]" started-at="2025-05-21T15:53:58 IST" name="cMethod" finished-at="2025-05-21T15:53:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cMethod -->
        <test-method signature="dMethod()[pri:0, instance:Testng.HelperAttribute@33c911a1]" started-at="2025-05-21T15:53:58 IST" name="dMethod" finished-at="2025-05-21T15:53:58 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dMethod -->
        <test-method signature="aMethod()[pri:0, instance:Testng.HelperAttribute@33c911a1]" started-at="2025-05-21T15:53:58 IST" name="aMethod" finished-at="2025-05-21T15:53:58 IST" depends-on-methods="Testng.HelperAttribute.cMethod, Testng.HelperAttribute.dMethod" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aMethod -->
      </class> <!-- Testng.HelperAttribute -->
      <class name="Testng.CheckAnnotation">
        <test-method signature="checkAnnotation()[pri:0, instance:Testng.CheckAnnotation@7817fd62]" started-at="2025-05-21T15:53:49 IST" name="checkAnnotation" finished-at="2025-05-21T15:53:49 IST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAnnotation -->
        <test-method signature="checkAnnotation2()[pri:0, instance:Testng.CheckAnnotation@7817fd62]" started-at="2025-05-21T15:53:49 IST" name="checkAnnotation2" finished-at="2025-05-21T15:53:49 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAnnotation2 -->
      </class> <!-- Testng.CheckAnnotation -->
      <class name="Testng.OneMoreClass">
        <test-method signature="Demo2()[pri:0, instance:Testng.OneMoreClass@707194ba]" started-at="2025-05-21T15:53:58 IST" name="Demo2" finished-at="2025-05-21T15:53:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo2 -->
        <test-method signature="groupData4()[pri:0, instance:Testng.OneMoreClass@707194ba]" started-at="2025-05-21T15:53:58 IST" name="groupData4" finished-at="2025-05-21T15:53:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- groupData4 -->
      </class> <!-- Testng.OneMoreClass -->
      <class name="Testng.ThreeMethodOneClass">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:53:49 IST" name="beforeSuite" finished-at="2025-05-21T15:53:49 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:53:49 IST" name="beforeTest" finished-at="2025-05-21T15:53:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="beforeClass" finished-at="2025-05-21T15:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="autoLogin()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="autoLogin" finished-at="2025-05-21T15:54:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- autoLogin -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="beforeMethod" finished-at="2025-05-21T15:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="afterMethod" finished-at="2025-05-21T15:54:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="data1()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="data1" finished-at="2025-05-21T15:54:01 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- data1 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="beforeMethod" finished-at="2025-05-21T15:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="beforeMethod" finished-at="2025-05-21T15:54:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="afterMethod" finished-at="2025-05-21T15:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="data2()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="data2" finished-at="2025-05-21T15:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- data2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="afterMethod" finished-at="2025-05-21T15:54:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="beforeMethod" finished-at="2025-05-21T15:54:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="groupData1()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="groupData1" finished-at="2025-05-21T15:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- groupData1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="afterMethod" finished-at="2025-05-21T15:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="groupData2()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="groupData2" finished-at="2025-05-21T15:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- groupData2 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="beforeMethod" finished-at="2025-05-21T15:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="afterMethod" finished-at="2025-05-21T15:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="groupData3()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="groupData3" finished-at="2025-05-21T15:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- groupData3 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="beforeMethod" finished-at="2025-05-21T15:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="beforeMethod" finished-at="2025-05-21T15:54:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="afterMethod" finished-at="2025-05-21T15:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="loginApi()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="loginApi" finished-at="2025-05-21T15:54:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginApi -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="afterMethod" finished-at="2025-05-21T15:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="beforeMethod" finished-at="2025-05-21T15:54:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loginApp()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="loginApp" finished-at="2025-05-21T15:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginApp -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="afterMethod" finished-at="2025-05-21T15:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="loginWebsite()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="loginWebsite" finished-at="2025-05-21T15:54:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWebsite -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="beforeMethod" finished-at="2025-05-21T15:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="afterClass" finished-at="2025-05-21T15:54:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="afterMethod" finished-at="2025-05-21T15:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="afterTest" finished-at="2025-05-21T15:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Testng.ThreeMethodOneClass@4c39bec8]" started-at="2025-05-21T15:54:01 IST" name="afterSuite" finished-at="2025-05-21T15:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- Testng.ThreeMethodOneClass -->
      <class name="Testng.ChildClass1">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Testng.ChildClass1@77f1baf5]" started-at="2025-05-21T15:53:49 IST" name="beforeMethod" finished-at="2025-05-21T15:53:53 IST" duration-ms="3646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="childClass1()[pri:0, instance:Testng.ChildClass1@77f1baf5]" started-at="2025-05-21T15:53:53 IST" name="childClass1" finished-at="2025-05-21T15:53:53 IST" duration-ms="96" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- childClass1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Testng.ChildClass1@77f1baf5]" started-at="2025-05-21T15:53:53 IST" name="afterMethod" finished-at="2025-05-21T15:53:58 IST" duration-ms="5119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- Testng.ChildClass1 -->
      <class name="Testng.ChildClass2">
        <test-method signature="childClass2()[pri:0, instance:Testng.ChildClass2@4961f6af]" started-at="2025-05-21T15:53:58 IST" name="childClass2" finished-at="2025-05-21T15:53:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- childClass2 -->
      </class> <!-- Testng.ChildClass2 -->
      <class name="Testng.listenerCheck">
        <test-method is-config="true" signature="beforeMethod1()[pri:0, instance:Testng.listenerCheck@75db5df9]" started-at="2025-05-21T15:53:58 IST" name="beforeMethod1" finished-at="2025-05-21T15:53:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod1 -->
        <test-method signature="listener()[pri:0, instance:Testng.listenerCheck@75db5df9]" started-at="2025-05-21T15:53:58 IST" name="listener" finished-at="2025-05-21T15:53:58 IST" duration-ms="11" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at Testng.listenerCheck.listener(listenerCheck.java:12)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listener -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Testng.listenerCheck@75db5df9]" started-at="2025-05-21T15:53:58 IST" name="afterMethod" finished-at="2025-05-21T15:53:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- Testng.listenerCheck -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
